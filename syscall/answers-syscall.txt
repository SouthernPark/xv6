1. Looking at the backtrace output, which function called syscall?
usertrap() at kerel/trap.c

2. What is the value of p->trapframe->a7 and what does that value represent? (Hint: look user/initcode.S, the first user program xv6 starts.)
7
the hardcoded system call number for exec SYS_exec

3. What was the previous mode that the CPU was in?

(gdb) p /x $sstatus
$4 = 0x200000022
SPP is the 8th bit (start from index 0) is 0
SPP is set to 0 if the trap is originated from user mode, 1 otherwise.

4. Write down the assembly instruction the kernel is panicing at. Which register corresponds to the variable num?

scause=0xd sepc=0x80001c82 stval=0x0

    80001c82:   00002683                lw      a3,0(zero) # 0 <_entry-0x80000000>

SEPC: Supervisor Exception Program Counter
      used to hold address of instruction that was being executed when an expection occurs

SCAUSE: identify the reason for a trap
The most signification is 0 implies it's an exception, ow interupt
The rest is 13 in bin, implies a Load Page Fault

5. Why does the kernel crash? Hint: look at figure 3-3 in the text; is address 0 mapped in the kernel address space? Is that confirmed by the value in scause above? (See description of scause in RISC-V privileged instructions)

from figure3.3, xv6 kernel virtual address space is mapped from 0x80000000. Address below that is not mapped and used by system I/O.
accessing an unmapped address will cause page fault (an exception)

6. What is the name of the process that was running when the kernel paniced? What is its process id (pid)?

initcode

pdi = 1


